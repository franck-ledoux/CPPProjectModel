name: install-link-ubuntu

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  init:
    name: ${{ matrix.config }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac. 
    runs-on:  ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2 # seems to be needed by codecov
        submodules: recursive

    - name: Initialize the dev environment
      run : chmod +x ./.github/workflows/env_linux.sh; ./.github/workflows/env_linux.sh
    
    - name: Create Build Environment
      # We create a subdirectory that will stand as our working directory for all 
      # subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build_lib

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build_lib
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      # CMAKE_INSTALL_PREFIX is specified here because of issue 20565 where CMAKE_INSTALL_LIBDIR
      # does not seem to be re-evaluated during the call to cmake --install
      run: >
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.config }} 
        -DENABLE_TEST= OFF -DENABLE_COV=OFF
        -DCMAKE_PREFIX_PATH="${{github.workspace}}/spack/opt/spack/lcov;"
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/local_install

    - name: Build
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build_lib
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.config }}

    - name: Install
      run: |
        if ${{ matrix.config == 'Release'}}; then
            cmake --install build_lib --prefix ${{github.workspace}}/local_install --config Release
        else
            cmake --install build_lib --prefix ${{github.workspace}}/local_install --config Debug
        fi

    - name: Test lib install
      run: |
        cmake -E make_directory ${{github.workspace}}/test_link
        cd ${{github.workspace}}/test_link/
        cmake -DCMAKE_PREFIX_PATH="${{github.workspace}}/local_install" -S ${{github.workspace}}/test_link -B build_exe
        cmake --build build_exe
        cd build_exe
        ctest
